apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
  namespace: mname
spec:
  storageClassName: mongodb-storageclass
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: mongo
  name: mongo
  namespace: mname
spec:
  serviceName: "mongo"
  replicas: 2
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - image: mongo
        name: mongo
        args: ["--dbpath", "/data/db"]
        resources:
          requests:
            memory: "250Mi"
            cpu: "200m"
          limits:
            memory: "500Mi"
            cpu: "500m"
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: MONGO_ROOT_USERNAME
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: MONGO_ROOT_PASSWORD
        - name: MONGO_INITDB_DATABASE
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: MONGO_DATABASE
        - name: MONGO_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: MONGO_USERNAME
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: MONGO_PASSWORD
        volumeMounts:
        - name: mongo-data-dir
          mountPath: "/data/db"
        - name: mongo-init-script
          mountPath: /docker-entrypoint-initdb.d/init.js
          subPath: init.js
      volumes:
      - name: mongo-init-script
        configMap:
          name: mongo-init-config
  volumeClaimTemplates:
  - metadata:
      name: mongo-data-dir
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: mongodb-storageclass
      resources:
        requests:
          storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: mname
  labels:
    app: mongo
spec:
  clusterIP: None
  selector:
    app: mongo
